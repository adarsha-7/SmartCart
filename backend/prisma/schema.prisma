generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(uuid())
  first_name   String?
  last_name    String?
  email        String     @unique
  passwordHash String?
  phone_number String?
  address      String?
  createdAt    DateTime   @default(now())
  provider     String[]
  image        String?
  isSeller     Boolean    @default(false)
  CartItems    CartItem[]
  Product      Product[]
}

model PendingUser {
  id                String   @id @default(uuid())
  email             String   @unique
  passwordHash      String
  verificationToken String   @unique
  createdAt         DateTime @default(now())
  expiresAt         DateTime
}

model Product {
  id              Int              @id @default(autoincrement())
  userID          String
  name            String
  price           Float
  rating          Float
  imageURL        String
  createdAt       DateTime         @default(now())
  numberOfRating  Int              @default(0)
  quantitySold    Int              @default(0)
  description     String?
  CartItems       CartItem[]
  featuredProduct FeaturedProduct?
  user            User             @relation(fields: [userID], references: [id])
  trendingProduct TrendingProduct?
  categories      Category[]       @relation("ProductCategories")
  subCategories   SubCategory[]    @relation("ProductSubCategories")
}

model TrendingProduct {
  id      Int     @id @default(autoincrement())
  product Product @relation(fields: [id], references: [id], onDelete: Cascade)
}

model FeaturedProduct {
  id        Int      @id @default(autoincrement())
  expiresAt DateTime
  product   Product  @relation(fields: [id], references: [id], onDelete: Cascade)
}


model Category {
  id            Int           @id
  name          String
  imageURL      String
  icon          String
  subcategories SubCategory[]
  products      Product[]     @relation("ProductCategories")
}

model SubCategory {
  id         Int       @id @default(autoincrement())
  name       String
  categoryId Int
  category   Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  products   Product[] @relation("ProductSubCategories")
}

model CartItem {
  id        Int      @id @default(autoincrement())
  userId    String
  productId Int
  quantity  Int      @default(1)
  addedAt   DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id])
}
